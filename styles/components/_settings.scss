// 
// styles for the settings notifications
//

// .switch-light {
//    display: flex;  
//    flex-direction: row;
//    strong{ 
//        flex-grow: 1;
//    }
//    span { 
//        flex-grow: 1;
//        background-color: $color-primary;
//        max-width: 20vw;
//        margin-right: 1rem;
//    }
// }
.settings, .settings:after, .settings:before {
	box-sizing: border-box;
}

body {
	justify-content: center;
}

.inputy[type="checkbox"] {
	visibility: hidden;
	&:checked + .labely {
		transform: rotate(360deg);
		background-color: #000;
		&:before {
			transform: translateX(58px);
			background-color: $color-primary;
		}
	}
}

.labely {
    margin-right: 1rem;
	display: flex;
	width: 4rem;
	height: 25px;
	box-shadow: 0 0 2px black;
	border-radius: 15px;
    padding-left: 2rem;
    padding-top: .5rem;
	position: relative;
	transition: transform .75s ease-in-out;
	transform-origin: 50% 50%;
	cursor: pointer;
    background-color: $color-primary;
	
	&:before {
		transition: transform .75s ease;
		transition-delay: .5s;
		content: "";
		display: block;
		position: absolute;
		width: 1rem;
		height: 1rem;
		background-color: white;
		border-radius: 50%;
		left: 2px;
	}
   
}

.switch{ 
    padding-left: 1rem;
    display: flex;
    width: 100%;
    p {
        width: 175%;
		text-align: left;
		padding-top: 7px;
    }
    input, label{ 
        flex-grow: 1;
        min-width: 2rem;
		max-width: 3rem;
		margin: 1rem 3rem;
    }
	@media (min-width: map-get($breakpoints, 'med'))  {
		display: grid;
		grid-template-columns: 30% 25%;
		input, label{ 
			grid-column-start: 2;
			grid-row-start: 1;
		}
	}
}
select {
    @include message(3rem);
    width: 80%;
}
.settings-button{ 
	width: 90vw;
}
#timezone{ 
	width: 90%;
}
#save { 
    width: 43%;
}
#cancel{ 
    background-color: grey;
    width: 43%;
}
